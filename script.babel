$(document).ready(function () {
  initHotspots()
  initTabs()
  initWarps()
  initDrawers()
})

function initHotspots () {
  animateHotspots($('.tab--active .hotspot'))
  
  // Hotspots drawer
  $('.hotspot').click(function () {
    $('.hotspot-drawer--open').removeClass('hotspot-drawer--open')
    $(this).next().addClass('hotspot-drawer--open')
  })
  
  $('.hotspot-drawer').click(function () {
    $('.hotspot-drawer--open').removeClass('hotspot-drawer--open')
  })
}

function animateHotspots (elem) {
  var tl = new TimelineMax(); 
  tl.staggerFrom(elem, 0.5, { 
    css: {
     opacity: 0,
     scale: 0,
     rotation: 180
    },
    ease: Back.easeOut.config(3)
  }, 0.2)
  tl.pause(0, true)
  tl.play()
}

// ----------------------------
// Tabs
// ----------------------------
function initTabs () {
  $('.tab-label').click(function (e) {
    var index = $(this).index()
    var tabs = $(this).closest('.tabs')
    tabs.find('.tab--active').removeClass('tab--active')
    $(this).addClass('tab--active')
    tabs.find('.tab-content:eq(' + index + ')').addClass('tab--active')
    animateHotspots($('.tab--active .hotspot'))
  })
}

// ----------------------------
// Drawers
// ----------------------------
function initDrawers () {
  $('.drawer-trigger').click(function () {
    var drawer = $(this).closest('.drawer')
    if (!drawer.hasClass('drawer--active')) {
      if ($('.drawer--active').length) {
        drawerOut($('.drawer--active'))
      }
      drawerIn(drawer) 
    }
  })
  
  $('.drawer-close').click(function () {
    var drawer = $(this).closest('.drawer')
    drawerOut(drawer)
  })
}

function drawerIn (drawer) {
  drawer.addClass('drawer--active')
    var tl = new TimelineMax();
    tl
      .to(drawer.find('.drawer-content'), 0.2, { x: '0%' })
      .from(drawer.find('.drawer-image'), 0.2, { opacity: 0 })
      .from(drawer.find('.drawer-inner'), 0.2, {
        opacity: 0,
        y: -20
      })
      .to(drawer.find('.drawer-close'), 0.2, {
        x: 0,
        opacity: 1,
        rotation: 0
      })
      .play()
}

function drawerOut (drawer) {
  drawer.removeClass('drawer--active')
    var tl = new TimelineMax(); 
    tl
     .to(drawer.find('.drawer-close'), 0.2, {
       x: -20,
       opacity: 0,
       rotation: -180
     })
     .to(drawer.find('.drawer-content'), 0.2, { x: '100%' })
     .play()
}

// ----------------------------
// Warps
// ----------------------------
function initWarps () {
  $('.warp')
    .each(function () {
      var warpAmount = $(this).data('warp') || 1000
      $(this).css('perspective', warpAmount + 'px')
    })
    .mousemove(function (e) {
      var warp = $(e.target)
      if (!warp.hasClass('warp')) warp = warp.closest('.warp')
      var warpItem = warp.find('.warp-item')
      var mouseX = e.pageX - warp[0].offsetLeft;
      var mouseY = e.pageY - warp[0].offsetTop;
      var width = warp.outerWidth()
      var height = warp.outerHeight()
      var centerX = width / 2
      var centerY = height / 2
      var rotateX = (centerX - mouseX) / width * 200
      var rotateY = (centerY - mouseY) / height * 200
      rotateX = Math.round(rotateX * 0.1)
      rotateY = Math.round(rotateY * 0.1)
      warpItem.css('transform', `rotateY(${rotateX}deg) rotateX(${rotateY}deg)`)
    })
    .mouseleave(function (e) {
      var warp = $(e.target)
      if (!warp.hasClass('warp')) warp = warp.closest('.warp')
      var warpItem = warp.find('.warp-item')
      warpItem.css('transform', 'rotateY(0deg) rotateX(0deg)')
    })
}